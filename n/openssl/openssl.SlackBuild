#!/bin/sh

# Copyright 2000 BSDi, Inc. Concord, CA, USA
# Copyright 2001, 2002 Slackware Linux, Inc.  Concord, CA, USA
# Copyright 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Set initial variables:
CWD=$(pwd)
TMP=${TMP:-/tmp}

VERSION=${VERSION:-$(echo openssl-*.tar.gz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

PKG1=$TMP/package-openssl
NAME1=openssl-$VERSION-$ARCH-$BUILD

# Parallel build doesn't link properly.
#NUMJOBS=${NUMJOBS:--j6}

# So that ls has the right field counts for parsing...
export LC_ALL=C

cd $TMP
rm -rf $PKG1 openssl-$VERSION

tar xvf $CWD/openssl-$VERSION.tar.gz || exit 1
cd openssl-$VERSION

# Fix pod syntax errors which are fatal wih a newer perl:
# zcat $CWD/fix-pod-syntax.patch.gz | patch -p1 --verbose || exit 1

# Use .so.1, not .so.1.0.0:
zcat $CWD/openssl.soname.diff.gz | patch -p1 --backup --verbose --suffix=.orig || exit 1

case "${HOST_TRIPLET}" in
  i686-w64-mingw32)
    LIBDIRSUFFIX=""
    zcat $CWD/openssl.optsx86.diff.gz | patch -p1 --backup --verbose --suffix=.orig || exit 1
    ;;
  x86_64-w64-mingw32)
    LIBDIRSUFFIX="64"
    ;;
esac

# OpenSSL has a (nasty?) habit of bumping the internal version number with
# every release.  This wouldn't be so bad, but some applications are so
# paranoid that they won't run against a different OpenSSL version than
# what they were compiled against, whether or not the ABI has changed.
#
# So, we will use the OPENSSL_VERSION_NUMBER from openssl-1.0.1c unless ABI
# breakage forces it to change.  Yes, we're finally using this old trick.  :)
sed -i "s/#define OPENSSL_VERSION_NUMBER.*/\/* Use 0x1000103fL (1.0.1c) below to avoid pointlessly breaking the ABI *\/\n#define OPENSSL_VERSION_NUMBER 0x1000103fL/g" crypto/opensslv.h || exit 1

chown -R root:root .
mkdir -p $PKG1/${PREFIX}/doc/openssl-$VERSION
cp -a CHANGES CHANGES.SSLeay FAQ INSTALL INSTALL.MacOS INSTALL.VMS INSTALL.W32 \
  LICENSE NEWS README README.ENGINE doc $PKG1/${PREFIX}/doc/openssl-$VERSION
chmod -R u+w,go+r-w,a-s

# If there's a CHANGES file, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r CHANGES ]; then
  DOCSDIR=$(echo $PKG1/${PREFIX}/doc/*-$VERSION)
  cat CHANGES | head -n 2000 > $DOCSDIR/CHANGES
  touch -r CHANGES $DOCSDIR/CHANGES
fi

CC="${HOST_TRIPLET}-gcc"

if echo "${HOST_TRIPLET}" | grep -q '^i.86-'; then
  PERL_ASM_SCHEME_FORMAT='coff'
  ASM='${x86_asm}'
  BN_OPS='BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}'
  SYS_ID='MINGW32'
  CFLAGS='-fomit-frame-pointer'
else
  PERL_ASM_SCHEME_FORMAT='mingw64'
  ASM='${x86_64_asm}'
  BN_OPS='SIXTY_FOUR_BIT RC4_CHUNK_LL DES_INT EXPORT_VAR_AS_FN'
  SYS_ID='MINGW64'
  CFLAGS=''
fi

CONFIGURATION="${HOST_TRIPLET}-gcc:-O2 -Wall ${CFLAGS} -DL_ENDIAN -DWIN32_LEAN_AND_MEAN -D_UNICODE::-D_MT:${SYS_ID}:-lws2_32 -lgdi32 -lcrypt32:${BN_OPS} EXPORT_VAR_AS_FN:${ASM}:${PERL_ASM_SCHEME_FORMAT}:win32:cygwin-shared:-D_WINDLL::.dll.a"

sed -i 's/^"mingw",.*/"this","'"${CONFIGURATION}"'",/' Configure

sed -i '/SHLIB=cyg.(LIBNAME)/ s/cyg/lib/' Makefile.shared

# This one has a \t before "sfx" and ...
sed -i '/\*DSO_WIN32\*)	sfx="eay32.dll"; pfx=;;/ { s/eay32// ; s/pfx=;/pfx=lib;/} ' engines/Makefile
# ... this one doesn't
sed -i '/\*DSO_WIN32\*) sfx="eay32.dll"; pfx=;;/ { s/eay32// ; s/pfx=;/pfx=lib;/} ' engines/ccgost/Makefile

find doc -name '*.pod' -exec sed -i 's/=item \([0-9]\+\)/=item Z<>\1/' {} +
sed -i 's/=head1 NOTES/=back\n\n\0/' doc/crypto/X509_STORE_CTX_get_error.pod
sed -i \
  -e 's/=item > 0/=over 4\n\n\0/' \
  -e 's/=cut/=back\n\n\0/' \
  doc/ssl/SSL_CTX_use_psk_identity_hint.pod

# These are the known patent issues with OpenSSL:
# name   #         expires
# MDC-2: 4,908,861  2007-03-13, included.  :-)
# IDEA:  5,214,703  2010-05-25, not included.
# RC5:   5,724,428  2015-03-03, not included.

./Configure \
 --prefix=/${PREFIX} \
 --libdir="lib${LIBDIRSUFFIX}" \
 --openssldir=/${PREFIX}/etc/ssl \
 no-idea \
 no-rc5 \
 no-sse2 \
 shared \
 this

set -x
export CROSS_COMPILE="${HOST_TRIPLET}-"

(make $NUMJOBS depend || make depend) || exit 1

(make $NUMJOBS; make) || exit 1

set +x

make install INSTALL_PREFIX=$PKG1 || exit 1
cp lib{crypto,ssl}-1.0.0.dll $PKG1/${PREFIX}/bin

rm $PKG1/${PREFIX}/lib${LIBDIRSUFFIX}/lib{crypto,ssl}.a

# !PATCH
case "${HOST_TRIPLET}" in
  *-*-mingw*) mv "$PKG/${PREFIX}/bin/openssl" "$PKG/${PREFIX}/bin/openssl.exe";;
esac

find $PKG1 | xargs file | egrep "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

mv $PKG1/${PREFIX}/etc/ssl/man $PKG1/${PREFIX}
( cd $PKG1/${PREFIX}/man/man1 ; mv passwd.1 ssl_passwd.1 )
( cd $PKG1/${PREFIX}/man/man3 ; mv rand.3 ssl_rand.3 )
( cd $PKG1/${PREFIX}/man/man3 ; mv err.3 ssl_err.3 )
# Compress and symlink the man pages:
if [ -d $PKG1/${PREFIX}/man ]; then
  ( cd $PKG1/${PREFIX}/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        # Remove the links similare to "SSL.3.gz" which points to "ssl.3.gz";
        # it breaks on Windows because of the non-case-sensitivity since we try
        # to "rm" the symlink before creating it.
        for eachpage in $( find . \! -type l -maxdepth 1 -printf '%f\n') ; do
          find . -iname "${eachpage}" \! -name "${eachpage}" -exec rm {} +
        done
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

cd $PKG1
chmod 755 ${PREFIX}/lib${LIBDIRSUFFIX}/pkgconfig
sed -i -e "s#lib\$#lib${LIBDIRSUFFIX}#" ${PREFIX}/lib${LIBDIRSUFFIX}/pkgconfig/*.pc

# Make runtime package:
mkdir -p ${PREFIX}/doc/openssl-$VERSION
( cd $TMP/openssl-$VERSION
  cp -a CHANGES CHANGES.SSLeay FAQ INSTALL INSTALL.MacOS INSTALL.VMS \
    INSTALL.W32 LICENSE NEWS README README.ENGINE \
    $PKG1/${PREFIX}/doc/openssl-$VERSION
)

cat ${CWD}/openssl.yypkg.script | sed \
  -e "s/%{PKG}/openssl/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG1}/${PREFIX}"

