#!/bin/sh

# Copyright 2008, 2009, 2010, 2014  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


VERSION=III-10.2
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-cdparanoia

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf cdparanoia-${VERSION}
tar xvf $CWD/cdparanoia-$VERSION.src.tar.gz || exit 1
cd cdparanoia-$VERSION || exit 1
# Patch for changes in cdda headers:
zcat $CWD/cdparanoia-III-10.2_cdda_private.patch.gz | patch -p3 --verbose --backup --suffix=.orig || exit 1

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

OPT="-O2" \
./configure \
  --prefix=/${PREFIX} \
  --libdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
  --mandir=/${PREFIX}/man \
  --includedir=/${PREFIX}/include/cdda \
  --host=${HOST_TRIPLET} \
  --build=$ARCH-slackware-linux

make $NUMJOBS OPT="-O2" || make OPT="-O2" || exit 1

# Manual install:
install -d $PKG/${PREFIX}/bin
install -d $PKG/${PREFIX}/include/cdda
install -d $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
install -d $PKG/${PREFIX}/man/man1
install -m 0755 cdparanoia $PKG/${PREFIX}/bin/
install -m 0644 cdparanoia.1  $PKG/${PREFIX}/man/man1/
install -m 0644 utils.h paranoia/cdda_paranoia.h interface/cdda_interface.h \
	$PKG/${PREFIX}/include/cdda/
install -m 0755 paranoia/libcdda_paranoia.so.0.10.? \
	interface/libcdda_interface.so.0.10.? \
	$PKG/${PREFIX}/lib${LIBDIRSUFFIX}/
install -m 0644 paranoia/libcdda_paranoia.a interface/libcdda_interface.a \
	$PKG/${PREFIX}/lib${LIBDIRSUFFIX}/

( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
  ln -sf libcdda_paranoia.so.0.10.? libcdda_paranoia.so
  ln -sf libcdda_interface.so.0.10.? libcdda_interface.so
)

mkdir -p $PKG/${PREFIX}/man/jp/man1
cp -a cdparanoia.1.jp $PKG/${PREFIX}/man/jp/man1/cdparanoia.1

# Compress and link manpages, if any:
if [ -d $PKG/${PREFIX}/man ]; then
  ( cd $PKG/${PREFIX}/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

# Strip binaries:
find $PKG | xargs file | egrep -e "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

mkdir -p $PKG/${PREFIX}/doc/cdparanoia-$VERSION
cp -a \
  FAQ.txt GPL* COPYING* README* \
  $PKG/${PREFIX}/doc/cdparanoia-$VERSION
chown -R root:root $PKG/${PREFIX}/doc/cdparanoia-$VERSION
chmod 755 $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/libcdda*.so

cat ${CWD}/cdparanoiac.yypkg.script | sed \
  -e "s/%{PKG}/cdparanoiac/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | makeypkg -o ${YYOUTPUT} -script - "${PKG}/${PREFIX}"
