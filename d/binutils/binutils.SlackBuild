#!/bin/sh

# Copyright 2005-2013  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Modified 2011 by Eric Hameleers <alien at slackware.com> for ARM port.


PKGNAM=binutils
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

NUMJOBS=${NUMJOBS:-" -j7 "}

# Uncomment this to include the experimental gold linker:
# GOLD=" --enable-gold=yes --enable-ld=default "

# Set to ld.gold or ld.bfd:
DEFAULT_LD=ld.bfd

# The --enable-initfini-array option was added in binutils-2.21.51.0.3.
# This option currently causes a world of hurt trying to compile glibc,
# and might break static libraries or cause other ill effects.  There
# is an upstream patch for glibc but it does not avoid all of the known
# problems (and there may be some unknown ones, too), so we will avoid
# introducing this feature for now.
# References:
# http://sourceware.org/bugzilla/show_bug.cgi?id=12343
# http://gcc.gnu.org/bugzilla/show_bug.cgi?id=46770
NO_INITFINI=" --disable-initfini-array "

case "${HOST_TRIPLET}" in
  *-*-mingw*) PLUGINS="--disable-plugins" ;;
  *)          PLUGINS="--enable-plugins" ;;
esac

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

WERROR="--enable-werror=no"

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-binutils

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP
rm -rf binutils-$VERSION
tar xvf $CWD/binutils-$VERSION.tar.gz || \
  tar xvf $CWD/binutils-$VERSION.tar.bz2 || \
  tar xvf $CWD/binutils-$VERSION.tar.xz || exit 1
cd binutils-$VERSION

# Export the demangle.h header file:
zcat $CWD/binutils.export.demangle.h.diff.gz | patch -p1 --verbose || exit 1
# Don't check to see if "config.h" was included in the installed headers:
zcat $CWD/binutils.no-config-h-check.diff.gz | patch -p1 --verbose || exit 1

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# End of preparations
if echo "$*" | grep -qw -- --prep ; then
  exit 0
fi

# Build for an x86 glibc2-based Linux system:
CFLAGS="-O2" \
./configure \
  --prefix=/${PREFIX} \
  --with-sysroot=/${PREFIX} \
  --libdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
  --mandir=/${PREFIX}/man \
  --infodir=/${PREFIX}/info \
  --with-docdir=/${PREFIX}/doc/binutils-$VERSION \
  --enable-shared \
  --disable-multilib \
  --enable-64-bit-bfd \
  --enable-threads \
  --enable-targets=${TARGET_TRIPLET} \
  --target=${TARGET_TRIPLET} \
  --build=${BUILD_TRIPLET} \
  --host=${HOST_TRIPLET} \
  $PLUGINS \
  $GOLD \
  $NO_INITFINI \
  $WERROR \
  || exit 1

make clean || exit 1
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# "make install" skips this, but binutils.spec doesn't.  Sneaky, huh?
cp -a include/libiberty.h $PKG/${PREFIX}/include/libiberty.h

# Differentiate between BSD strings and GNU strings
( cd $PKG/${PREFIX}/bin ; mv strings strings-GNU )
( cd $PKG/${PREFIX}/man/man1 ; mv strings.1 strings-GNU.1 )

# This bombs out when installing on windows since symlinks are not usable.
# # Move ldscripts to ${PREFIX}/lib${LIBDIRSUFFIX}, and then put symlinks in place
# mv $PKG/${PREFIX}/${TARGET_TRIPLET}/lib/ldscripts $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
# ( cd $PKG/${PREFIX}/${TARGET_TRIPLET}
#   ln -s /${PREFIX}/lib${LIBDIRSUFFIX}/ldscripts lib/ldscripts
#   for FILE in ar as ld ld.bfd ld.gold nm objcopy objdump ranlib strip ; do
#     if [ -r "$PKG/${PREFIX}/bin/$FILE" ]; then
#       rm -f bin/$FILE
#       ln -s /${PREFIX}/bin/$FILE bin/$FILE
#     fi
#   done
# )

# If the requested default linker is present, make it the default:
# Set the link differently on the system to change the default at runtime.
if [ -r $PKG/${PREFIX}/bin/$DEFAULT_LD ]; then
  ( cd $PKG/${PREFIX}/bin ; rm -f ld ; ln -sf $DEFAULT_LD ld )
fi
      
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

# Remove some unneeded man pages, and then compress the rest
# rm -f $PKG/${PREFIX}/man/man1/{dlltool,windres}.1
( cd $PKG/${PREFIX}/man
  find . -type f -exec gzip -9 {} \;
  for i in $(find . -type l) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)

# Compress info pages
rm -f $PKG/${PREFIX}/info/dir
gzip -9 $PKG/${PREFIX}/info/*

mkdir -p $PKG/${PREFIX}/doc/binutils-$VERSION
cp \
  $CWD/release.binutils-* \
  COPYING* ChangeLog.linux MAI* README* \
  $PKG/${PREFIX}/doc/binutils-$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/${PREFIX}/doc/*-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

chown -R root:root $PKG/${PREFIX}/doc/binutils-$VERSION

cat ${CWD}/binutils.yypkg.script | sed \
  -e "s/%{PKG}/${PKGNAM}/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}/${TARGET_TRIPLET}/" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG}/${PREFIX}"

cat << EOF

#############################
oprofile links to libbfd so
be sure to recompile that
#############################

EOF
