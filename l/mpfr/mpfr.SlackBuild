#!/bin/sh

# Copyright 2008, 2009, 2010, 2011, 2012  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Modified 2011 by Eric Hameleers <alien at slackware.com> for ARM port.

PKGNAM=mpfr
VERSION=${VERSION:-$(echo mpfr-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

NUMJOBS=${NUMJOBS:-" -j7 "}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

case "$ARCH" in
    arm*) BUILD_TRIPLET=$ARCH-slackware-linux-gnueabi ;;
    *)    BUILD_TRIPLET=$ARCH-slackware-linux ;;
esac

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-mpfr
rm -rf $PKG
mkdir -p $TMP $PKG

# Determine patchlevel:
PATCHLEVEL=$(/bin/ls $CWD/patches/* 2> /dev/null | rev | cut -f 1 -d / | cut -b4- | rev | cut -b6- | tail -n 1 )
if [ ! "$PATCHLEVEL" = "" ]; then
  PATCHLEVEL="p${PATCHLEVEL}"
fi

cd $TMP
rm -rf mpfr-$VERSION
tar xvf $CWD/mpfr-$VERSION.tar.xz || exit 1
cd mpfr-$VERSION
chown -R root:root .

if [ ! -z "$(ls $CWD/patches/* 2> /dev/null)" ]; then
  for file in $CWD/patches/* ; do
    ( zcat $file 2> /dev/null | patch -p1 --verbose --batch 2> /dev/null || exit 1 )
    if [ ! $? = 0 ]; then
      exit 1
    fi
  done
fi

CFLAGS="-O2" \
LDFLAGS="-L/${PREFIX}/lib${LIBDIRSUFFIX}" \
./configure \
  --prefix=/${PREFIX} \
  --libdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
  --infodir=/${PREFIX}/info \
  --docdir=/${PREFIX}/doc/mpfr-$VERSION \
  --enable-static=no \
  --enable-shared=yes \
  --host=${HOST_TRIPLET} \
  --build=$BUILD_TRIPLET

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

find $PKG | xargs file | egrep -e "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

rm -f $PKG/${PREFIX}/info/dir
gzip -9 $PKG/${PREFIX}/info/*

mkdir -p $PKG/${PREFIX}/doc/mpfr-$VERSION
cp -a \
  AUTHORS BUGS COPYING* FAQ.html INSTALL NEWS README* TODO VERSION \
  examples \
  $PKG/${PREFIX}/doc/mpfr-$VERSION

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/${PREFIX}/doc/${PKGNAM}-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

cat ${CWD}/${PKGNAM}.yypkg.script | sed \
  -e "s/%{PKG}/${PKGNAM}/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG}/${PREFIX}"

