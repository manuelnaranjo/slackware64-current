#!/bin/sh

# Copyright 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Merged some ideas from Alex Sarmardzic's script for qt4 at SlackBuilds.org
# ^^ Modified by Robby Workman <rworkman@slackware.com> for QT4 & KDE4

# We're using qt-copy instead of a released qt version, as this git release
# has at least one bugfix strongly recommended by the kde developers.

# Obtained from:
# git clone git://gitorious.org/+kde-developers/qt/kde-qt.git
# git checkout origin/4.5.3-patched
# git checkout origin/4.6.0-stable-patched
# git checkout origin/4.6.1-patched
# git checkout origin/4.7.0-patched
#
# Alternate method (we don't use this):
# wget http://qt.gitorious.org/qt/kde-qt/archive-tarball/4.6.2-patched
#
# Modifications 2010, 2011, 2012  Eric Hameleers, Eindhoven, NL
# qt 4.7.3, 4.7.4, 4.8.0, 4.8.1, 4.8.2, 4.8.4 are built from original nokia sources.

PKGNAM=qt
VERSION=${VERSION:-$(ls qt-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

NUMJOBS=${NUMJOBS:--j7}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-${PKGNAM}

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf qt-everywhere-opensource-src-$VERSION
tar xvf $CWD/qt-everywhere-opensource-src-$VERSION.tar.gz     # For qt releases
cd qt-everywhere-opensource-src-$VERSION || exit 1
# We have to use rpath here as the library which the
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Fix path to mysql header
# zcat $CWD/qt.mysql.h.diff.gz | patch -p1 --verbose || exit 1

# Stupid idea - remove it:
# zcat $CWD/qt.webkit-no_Werror.patch.gz | patch -p1 --verbose || exit 1

case "${HOST_TRIPLET}" in
  *-*-mingw*)
    cat $CWD/0001-configure-use-pkg-config-for-libpng.patch \
      | patch -p1 --verbose || exit 1
    cat $CWD/0002-Use-widl-instead-of-midl.-Also-set-QMAKE_DLLTOOL-to-.patch \
      | patch -p1 --verbose || exit 1

    cat $CWD/qt5-dont-add-resource-files-to-qmake-libs.patch \
      | ( cd qtbase && patch -p1 --verbose ) || exit 1
    cat $CWD/qt5-qmake-implib-dll-a.patch \
      | ( cd qtbase && patch -p1 --verbose ) || exit 1

    sed -i '/option.host_build./ d' qtactiveqt/src/tools/idc/idc.pro

    ;;
esac

export CFLAGS="-O2"
export CXXFLAGS="-O2"
export OPENSOURCE_CXXFLAGS="-O2"
export LDFLAGS="-L/${PREFIX}/lib${LIBDIRSUFFIX}"

# Fix crash on malformed GIF images (CVE-2014-0190):
zcat $CWD/qt.fix.broken.gif.crash.diff.gz | patch -p1 --verbose || exit 1

./configure \
  -confirm-license \
  -opensource \
  -prefix /${PREFIX}/lib${LIBDIRSUFFIX}/qt5 \
  -hostprefix /${PREFIX}/lib${LIBDIRSUFFIX}/qt5 \
  -hostbindir /${PREFIX}/bin/qt5 \
  -headerdir /${PREFIX}/include/qt5 \
  -libdir /${PREFIX}/lib${LIBDIRSUFFIX} \
  -no-compile-examples \
  -nomake examples \
  -nomake tests \
  -no-kms \
  -no-cups \
  -no-gtkstyle \
  -no-glib \
  -no-fontconfig \
  ${CONFIGURE_OPTIONS} \
  -release \
  -no-separate-debug-info \
  -no-pch
  # No-precompiled-headers is ccache-friendly.

# Sometimes a failure happens when parallelizing make.  Try again if make fails,
# but make a failure the second time around (single threaded) a fatal error:
make $NUMJOBS || make || exit 1
make install INSTALL_ROOT=$PKG || exit 1

# The infamous qt -> qt-${VERSION} link that keeps the full path out of .la files:
( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX} ; ln -sf qt qt-${VERSION} )

# Add a missing Qt.pc which is needed by KDE applications:
mkdir -p $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig
cat <<EOF > $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/Qt.pc
prefix=/${PREFIX}/lib${LIBDIRSUFFIX}/qt
bindir=\${prefix}/bin
datadir=\${prefix}
docdir=\${prefix}/doc
headerdir=\${prefix}/include
importdir=\${prefix}/imports
libdir=\${prefix}/lib
moc=\${bindir}/moc
plugindir=\${prefix}/plugins
qmake=\${bindir}/qmake
sysconfdir=\${prefix}/etc/settings
translationdir=\${prefix}/translations

Name: Qt
Description: Qt Configuration
Version: $VERSION
EOF

# libjscore is used internally.  Prevent a false dependency on this in the .la and .pc files:
# sed -i "s,-ljscore,,g" $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/*.pc
# sed -i "s,-L../JavaScriptCore/release,,g" $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/*.pc

# libwebcore is used internally.  Prevent a false dependency on this in the .la and .pc files:
# sed -i \
#   -e "s#-L/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib -L../../WebCore/release -L../../JavaScriptCore/release -L/${PREFIX}/X11R6/lib$LIBDIRSUFFIX  -lwebcore##g" \
#   -e "s#-L/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib -L../../WebCore/release -L../../JavaScriptCore/release -L/${PREFIX}/X11R6/lib  -lwebcore##g" \
#   -e "s# -lwebcore##g" \
#   $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/libQtWebKit.la $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/QtWebKit.pc

# Link the shared libraries into /${PREFIX}/lib:
# ( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
#   for file in qt/lib/*.so* ; do
#     ln -sf $file .
#   done
# )

find $PKG -size +4k -type f | xargs file | egrep -e "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

# Add profile scripts
# mkdir -p $PKG/etc/profile.d
# sed -e "s#${PREFIX}/lib/#${PREFIX}/lib${LIBDIRSUFFIX}/#g" $CWD/profile.d/qt4.sh \
#   > $PKG/etc/profile.d/qt4.sh
# sed -e "s#${PREFIX}/lib/#${PREFIX}/lib${LIBDIRSUFFIX}/#g" $CWD/profile.d/qt4.csh \
#   > $PKG/etc/profile.d/qt4.csh
# chmod 0755 $PKG/etc/profile.d/*

# Put a ton of links to more "normal" places.  I'd just use a prefix of /${PREFIX}, but it
# creates a ton of new (and ambiguously named) /${PREFIX} directories...
# mkdir -p $PKG/${PREFIX}/bin
# ( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/bin
#   for file in * ; do
#     ( cd $PKG/${PREFIX}/bin ; ln -sf /${PREFIX}/lib${LIBDIRSUFFIX}/qt/bin/$file . )
#   done
# )

# mkdir -p $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/pkgconfig
# ( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig
#   for file in *.pc ; do
#     ( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/pkgconfig ; ln -sf /${PREFIX}/lib${LIBDIRSUFFIX}/qt/lib/pkgconfig/$file . )
#   done
# )

# Install Qt's private headers - at least Gentoo and Fedora are adding these
# and some software has (inevitably) started depending on them:
# We're using `rsync -R` as easy way to preserve relative path names:
# rsync -aR \
#   include/Qt{Core,Declarative,Gui,Script}/private \
#   src/{corelib,declarative,gui,script}/*/*_p.h \
#   ${PKG}/${PREFIX}/lib${LIBDIRSUFFIX}/qt/

# Add menu entries for all those hidden but great Qt applications:
# Qt logo:
convert $PKG/${PREFIX}/lib$LIBDIRSUFFIX/qt/doc/src/images/qt-logo.png  -resize 48x48 $PKG/${PREFIX}/share/icons/hicolor/48x48/apps/qt-logo.png
convert $PKG/${PREFIX}/lib$LIBDIRSUFFIX/qt/doc/src/images/qt-logo.png  -resize 48x48 $PKG/${PREFIX}/share/icons/hicolor/48x48/apps/qt-logo.png
# Assistant icons
install -p -m644 -D tools/assistant/tools/assistant/images/assistant.png $PKG/${PREFIX}/share/icons/hicolor/32x32/apps/assistant.png
install -p -m644 -D tools/assistant/tools/assistant/images/assistant-128.png $PKG/${PREFIX}/share/icons/hicolor/128x128/apps/assistant.png
# Designer icon
install -p -m644 -D tools/designer/src/designer/images/designer.png $PKG/${PREFIX}/share/icons/hicolor/128x128/apps/designer.png
# Linguist icons
for icon in tools/linguist/linguist/images/icons/linguist-*-32.png ; do
  size=$(echo $(basename ${icon}) | cut -d- -f2)
  install -p -m644 -D ${icon} $PKG/${PREFIX}/share/icons/hicolor/${size}x${size}/apps/linguist.png
done

# And the .desktop files
mkdir -p $PKG/${PREFIX}/share/applications
cat <<EOF > $PKG/${PREFIX}/share/applications/designer.desktop
[Desktop Entry]
Name=Qt4 Designer
GenericName=Interface Designer
Comment=Design GUIs for Qt4 applications
Exec=designer
Icon=designer
MimeType=application/x-designer;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat <<EOF > $PKG/${PREFIX}/share/applications/assistant.desktop
[Desktop Entry]
Name=Qt4 Assistant 
Comment=Shows Qt4 documentation and examples
Exec=assistant
Icon=assistant
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;Documentation;
EOF
cat <<EOF > $PKG/${PREFIX}/share/applications/linguist.desktop
[Desktop Entry]
Name=Qt4 Linguist 
Comment=Add translations to Qt4 applications
Exec=linguist
Icon=linguist
MimeType=text/vnd.trolltech.linguist;application/x-linguist;
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Development;
EOF
cat <<EOF > $PKG/${PREFIX}/share/applications/qtconfig.desktop
[Desktop Entry]
Name=Qt4 Config 
Comment=Configure Qt4 behavior, styles, fonts
Exec=qtconfig
Icon=qt-logo
Terminal=false
Encoding=UTF-8
Type=Application
Categories=Qt;Settings;
EOF

# Add a documentation directory:
mkdir -p $PKG/${PREFIX}/doc/$PKGNAM-$VERSION
cp -a *GPL_EXCEPTION* FAQ* INSTALL KNOWN* LICENSE* README* changes-* \
  $PKG/${PREFIX}/doc/$PKGNAM-$VERSION
if [ -d $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/qt/doc/html ]; then
  ( cd $PKG/${PREFIX}/doc/$PKGNAM-$VERSION
    ln -sf /${PREFIX}/lib${LIBDIRSUFFIX}/qt/doc/html .
  )
fi

cat ${CWD}/${PKGNAM}.yypkg.script | sed \
  -e "s/%{PKG}/${PKGNAM}/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG}/${PREFIX}"
