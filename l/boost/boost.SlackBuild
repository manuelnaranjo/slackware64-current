#!/bin/sh

# Copyright 2007, 2008, 2012 Eric Hameleers, Eindhoven, NL
# Copyright 2007-2008, 2013, 2014 Heinz Wiesinger, Amsterdam, NL
# Copyright 2008, 2009, 2010, 2013, 2014  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# bjam-build system mostly taken from SlackBuild by Eric Hameleers
# Script modified by Robby Workman - no copyright claims or added terms
# Modified 2012 by Eric Hameleers <alien at slackware.com> for ARM port.


PKGNAM=boost
VERSION=${VERSION:-$(echo $PKGNAM_*.tar.?z* | rev | cut -f 3- -d . | rev | cut -f 2- -d _)}
BUILD=${BUILD:-1}

PKG_VERSION=$(echo $VERSION | tr _ .)	# Leave this alone
NUMJOBS=${NUMJOBS:-" -j7 "}

export LANG="en"



# detect this based on what target we have
if [[ "$YYPREFIX" == *32* ]]; then
    LIBDIRSUFFIX=""
    ADDRESS_MODEL="32"
else
    LIBDIRSUFFIX="64"
    ADDRESS_MODEL="64"
fi

SLKCFLAGS="-O2"

set -eu

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-boost

IVERSION=${VERSION//./_}

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf boost_$IVERSION
tar xvf $CWD/boost_$IVERSION.tar.?z* || exit 1
cd boost_$IVERSION || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Don't allow MOC to process this incompatible header:
sed -e '1 i#ifndef Q_MOC_RUN' \
  -e '$ a#endif' \
  -i boost/type_traits/detail/has_binary_operator.hpp

HOST_PYTHON="host-python2"
# This is the python we build against:
PYTHON_VERSION=$(${HOST_PYTHON} -c 'import sys; print sys.version[:3]')
PYTHON_FLAGS="-sPYTHON_ROOT=${PREFIX} -sPYTHON_VERSION=$PYTHON_VERSION"

case "${HOST_TRIPLET}" in
    *-*-mingw*)
        for i in $CWD/fedora-patches/*.patch; do
            patch -p1 -i ${i}
        done

        for i in $CWD/patches/*.patch; do
            patch -p1 -i ${i}
        done

        BJAM="bjam"
        # build for target
        cd tools/build/v2/engine
          CC=${HOST_TRIPLET}-gcc \
              ${BJAM} -f build.jam \
              --toolset=cc -d0

           mkdir -p ${PKG}/${PREFIX}/bin
           cp $(find -name b2.exe -a -type f) ${PKG}/${PREFIX}/bin
           cp $(find -name bjam.exe -a -type f) ${PKG}/${PREFIX}/bin
        cd -

        # Create build subdirectory
        mkdir obj

        export OTAG="<"
        export CTAG=">"
        export COMMA_TAG=";"

        while read line; do
            eval echo "$line";
        done < "${CWD}/user-config.jam.template" > user-config.jam

        # Next, we build boost using bjam
        $BJAM \
            release \
            $NUMJOBS \
            "-sNO_COMPRESSION=0" \
            "-sZLIB_INCLUDE=${YYPREFIX}/include" \
            "-sZLIB_LIBPATH=${YYPREFIX}/lib${LIBDIRSUFFIX}" \
            "-sBZIP2_INCLUDE=${YYPREFIX}/include" \
            "-sBZIP2_LIBPATH=${YYPREFIX}/lib${LIBDIRSUFFIX}" \
            "-sEXPAT_INCLUDE=${YYPREFIX}/include" \
            "-sEXPAT_LIBPATH=${YYPREFIX}/lib${LIBDIRSUFFIX}" \
            --layout=system \
            --builddir=obj \
            --prefix=/${PREFIX} \
            --libdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
            --build-type=minimal \
            --ignore-site-config \
            --user-config=user-config.jam \
            toolset=gcc \
            target-os=windows/python=2.7 \
            variant=release \
            link=shared \
            address-model=${ADDRESS_MODEL} \
            binary-format=pe \
            threading=multi \
            threadapi=win32 \
            runtime-link=shared \
            cflags="$SLKCFLAGS" \
            cxxflags="$SLKCFLAGS" \
            $PYTHON_FLAGS \
            stage

        # And then install boost..
        mkdir -p $PKG/usr/{lib$LIBDIRSUFFIX,include}

        $BJAM \
            release \
            "-sEXPAT_INCLUDE=/${PREFIX}/include" \
            "-sEXPAT_LIBPATH=/${PREFIX}/lib${LIBDIRSUFFIX}" \
            --layout=system \
            --builddir=obj \
            --prefix=$PKG/${PREFIX}/ \
            --libdir=$PKG/${PREFIX}/lib${LIBDIRSUFFIX} \
            --build-type=minimal \
            --ignore-site-config \
            --user-config=user-config.jam \
            toolset=gcc \
            target-os=windows \
            address-model=${ADDRESS_MODEL} \
            binary-format=pe \
            variant=release \
            link=shared \
            threading=multi \
            threadapi=win32 \
            runtime-link=shared \
            cflags="$SLKCFLAGS" \
            cxxflags="$SLKCFLAGS" \
            $PYTHON_FLAGS \
            install

        mv ${PKG}/${PREFIX}/lib/*.dll ${PKG}/${PREFIX}/bin
        ;;
    *)

        # build for host, we need bjam for our host
        cd tools/build/src/engine
          CFLAGS="$SLKCFLAGS -fno-strict-aliasing" ./build.sh cc
          mkdir -p ${PKG}/${PREFIX}/bin
          cp $(find -name b2 -a -type f) ${PKG}/${PREFIX}/bin
          cp $(find -name bjam -a -type f) ${PKG}/${PREFIX}/bin
        cd -
        ;;
esac

find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null

mkdir -p $PKG/usr/doc/boost-$PKG_VERSION
# Do not copy 44MB of developer 'doc/html' into our package...
cp -a LICENSE* index.html $PKG/usr/doc/boost-$PKG_VERSION
find $PKG/usr/doc -type f -exec chmod 0644 {} \;

cat ${CWD}/${PKGNAM}.yypkg.script | sed \
  -e "s/%{PKG}/${PKGNAM}/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG}/${PREFIX}"
